networks:
  app-network:
  db-network:

volumes:
  frontend_dist:
  db_init:
  pgdata:

services:
  backend:
    image: "kachudayo/nestjs-app:node20-alpine"
    #    build:
    #      context: ../backend
    restart: on-failure
    ports:
      - '3000:3000'
    env_file: .env.production
    depends_on:
      - postgres
    links:
      - postgres
    networks:
      - db-network
      - app-network

  frontend:
#    image: "kachudayo/react-app:nginx-alpine"
    build:
      context: ../frontend
      args:
        VITE_API_URL: "https://api.filmswatch.nomorepartiessbs.ru/api/afisha"
        VITE_CDN_URL: "https://api.filmswatch.nomorepartiessbs.ru/content/afisha"
    ports:
      - 80:80
      - 443:443
    restart: always
    networks:
      - app-network
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./certbot/www/:/var/www/certbot/:ro
      - ./certbot/conf/:/etc/letsencrypt/:ro

  postgres:
    image: postgres:16.1-alpine3.18
    restart: always
    shm_size: 128mb
    env_file: .env.production
    ports:
      - "5555:5432"
    volumes:
      - ./db_init:/docker-entrypoint-initdb.d
      - ./pgdata:/var/lib/postgresql/data/pgdata
    networks:
      - db-network

  pgadmin:
    image: dpage/pgadmin4
    restart: unless-stopped
    container_name: pgadmin4
    environment:
      - PGADMIN_DEFAULT_EMAIL=admin@admin.com
      - PGADMIN_DEFAULT_PASSWORD=pgadmin4
    ports:
      - '8080:80'
    depends_on:
      - postgres
    networks:
      - db-network

  certbot:
    image: certbot/certbot:latest
    networks:
      - app-network
    volumes:
      - ./certbot/www/:/var/www/certbot/:rw
      - ./certbot/conf/:/etc/letsencrypt/:rw